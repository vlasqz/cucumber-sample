/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */
 
// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

apply plugin: 'project-report'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
	
	maven {
		url 'http://WIMIDDWMAD02:8090/artifactory/gradle-dev'
	}
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    // compile 'com.google.guava:guava:24.1-jre'
	// compile 'org.springframework.boot:spring-boot-starter-web:1.5.9.RELEASE'
	// compile 'org.springframework.boot:spring-boot-starter-security:1.5.9.RELEASE'
    // compile 'org.springframework.security.oauth:spring-security-oauth2:2.2.1.RELEASE'
    compile 'org.apache.logging.log4j:log4j-core:2.10.0'
    compile 'org.apache.logging.log4j:log4j-api:2.10.0'
    compile 'io.cucumber:cucumber-java:3.0.2'
	compile 'io.cucumber:cucumber-junit:3.0.2'
    // compile 'org.apache.commons:commons-lang3:3.7'
	// compile 'com.uscc.data:data-access-client:1.3.12'
    
    // testCompile 'org.hamcrest:hamcrest-all:1.3'
    // testCompile 'com.uscc.common:selenium-util:1.0.4'
    // testCompile 'io.cucumber:cucumber-java:3.0.2'
	// testCompile 'io.cucumber:cucumber-junit:3.0.2'
    
    // testCompile 'org.apiguardian:apiguardian-api:1.0.0'
	// testCompile 'com.qasymphony.qtest:qtest-sdk-java:1.4.9'
}

// Define the main class for the application
mainClassName = 'App'

test {
	useJUnit()
	 
    testLogging {
    	showStandardStreams = true
    }
}

task getMainDeps(type: Copy) {
	from sourceSets.main.runtimeClasspath
	into 'runtime/'
 }
  
 task getTestDeps(type: Copy) {
  	from sourceSets.test.runtimeClasspath
  	into 'runtime/'
}

configurations {
	cucumberRuntime {
		extendsFrom testRuntime
	}
}

task cucumber() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "cucumber.api.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = ['--plugin', 
				'pretty',
				'--plugin',
				'html:target/cucumber', 
				// '--plugin',
				// 'cucumber.runtime.formatter.CypherFormatter:target/cucumber/cypher.txt', 
				'--plugin',
				'json:target/cucumber/cucumber.json', 
				'--plugin', 'cucumber.runtime.formatter.CustomJUnitFormatter:cucumber-junit-report',
				'--glue', 
				// 'com.uscc.security.authentication.agentcellsite',
				'com/glue',
				'resources/feature']
		}
	}
}

task printClasspath() {
	doLast {
		FileCollection fullClasspath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
		
		fullClasspath.each({ println it.path })
	}
}